<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.errandsMapper">

	<resultMap type="errandsDTO" id="errandsMap">
		<id column="ERRANDS_NUM" property="errandsNum" />
		<result column="TITLE" property="title" />
		<result column="CONTENT" property="content" />
		<result column="END_TIME" property="endTime" />
		<result column="ARRIVAL_TIME" property="arrivalTime" />
		<result column="FINISH_TIME" property="finishTime" />
		<result column="PRODUCT_PRICE" property="productPrice" />
		<result column="ERRANDS_PRICE" property="errandsPrice" />
		<result column="ERRANDS_PHOTO" property="errandsPhoto" />
		<result column="START_TIME" property="startTime" />
		<association property="requestUser" javaType="memberDTO">
			<id column="REQUEST_ID" property="userId" />
			<result column="REQUEST_NAME" property="name" />
		</association>
		<association property="responseUser" javaType="memberDTO">
			<id column="RESPONSE_ID" property="userId" />
			<result column="RESPONSE_NAME" property="name" />
		</association>
		<association property="errandsPos" javaType="ErrandsPosDTO">
			<result column="ADDR" property="addr" />
			<result column="LATITUDE" property="latitude" />
			<result column="LONGITUDE" property="longitude" />
		</association>
		<collection property="gpa" ofType="GPADTO">
			<result column="RESPONSE_ACCURACY" property="responseAccuracy" />
			<result column="RESPONSE_SPEED" property="responseSpeed" />
			<result column="RESPONSE_KINDNESS" property="responseKindness" />
			<result column="REQUEST_MANNERS" property="requestManners" />
		</collection>
		<collection property="errandsReply" ofType="errandsReplyDTO">
			<id column="ERRANDS_REPLY_NUM" property="replyNum" />
			<result column="REPLY_CONTENT" property="replyContent" />
			<result column="PREDICT_TIME" property="arrivalTime" />
			<result column="REPLY_DATE" property="replyDate" />
			<association property="user" javaType="memberDTO">
				<id column="MEMBER_ID" property="userId" />
				<result column="REPLY_NAME" property="name" />
				<result column="SELF_IMG" property="selfImg" />
			</association>
		</collection>
	</resultMap>

	<delete id="deleteTimeErrands">
		delete from ERRANDS where TO_DATE(END_TIME,
		'YYYY-MM-DD HH24:MI:SS') &lt; sysdate and RESPONSE_ID is null
	</delete>
	<insert id="insertErrands" parameterType="errandsDTO">
		insert into
		ERRANDS(ERRANDS_NUM, TITLE, CONTENT, END_TIME,
		PRODUCT_PRICE,
		ERRANDS_PRICE, ERRANDS_PHOTO, REQUEST_ID)
		values(ERRANDS_NUM.nextval,
		#{title}, #{content}, #{endTime},
		#{productPrice}, #{errandsPrice},
		#{errandsPhoto,jdbcType=VARCHAR}, #{requestUser.userId})
	</insert>
	<select id="selectErrands" parameterType="int" resultMap="errandsMap">
		select * from ERRANDS_REPLY_GPA_VIEW
		<where>
			<if test="value != 0">
				ERRANDS_NUM = #{value}
			</if>
			<if test="value == 0">
				RESPONSE_ID is NULL
			</if>
		</where>
		order by ERRANDS_NUM desc, RESPONSE_ACCURACY
	</select>

	<select id="selectNum" resultType="int">
		select ERRANDS_NUM.CURRVAL
		from dual
	</select>
	<delete id="deleteErrands" parameterType="int">
		delete from ERRANDS
		where ERRANDS_NUM = #{value}
	</delete>

	<select id="countErrands" resultType="int">
		select count(*) from
		ERRANDS
	</select>
	<select id="searchErrandsAll" resultMap="errandsMap"
		parameterType="map">
		select * from ERRANDS_REPLY_GPA_VIEW
		<where>
			<if test="minPrice != null">
				AND ERRANDS_PRICE &gt; #{minPrice}
			</if>
			<if test="maxPrice != null">
				AND ERRANDS_PRICE &lt; #{maxPrice}
			</if>
			<if test="hash != null">
				AND CONTENT like #{hash}
			</if>
			<if test="distance != null">
				AND
				(6371*acos(
        case when (cos(radians(#{latitude}))*cos(radians(LATITUDE))*cos(radians(LONGITUDE)
		-radians(#{longitude}))+sin(radians(#{latitude}))*sin(radians(LATITUDE))> 1) then '1' 
        else TO_CHAR(cos(radians(#{latitude}))*cos(radians(LATITUDE))*cos(radians(LONGITUDE)
		-radians(#{longitude}))+sin(radians(#{latitude}))*sin(radians(LATITUDE))) end
        ))
		&lt;= #{distance}
			</if>
		</where>
		order by ERRANDS_NUM desc
	</select>
	<select id="searchErrands" resultMap="errandsMap" parameterType="map">
		select * from ERRANDS_REPLY_GPA_VIEW
		<where>
			RESPONSE_ID is null
			<if test="minPrice != null">
				AND ERRANDS_PRICE &gt; #{minPrice}
			</if>
			<if test="maxPrice != null">
				AND ERRANDS_PRICE &lt; #{maxPrice}
			</if>
			<if test="hash != null">
				AND CONTENT like #{hash}
			</if>
			<if test="distance != null">
				AND
				(6371*acos(
        case when (cos(radians(#{latitude}))*cos(radians(LATITUDE))*cos(radians(LONGITUDE)
		-radians(#{longitude}))+sin(radians(#{latitude}))*sin(radians(LATITUDE))> 1) then '1' 
        else TO_CHAR(cos(radians(#{latitude}))*cos(radians(LATITUDE))*cos(radians(LONGITUDE)
		-radians(#{longitude}))+sin(radians(#{latitude}))*sin(radians(LATITUDE))) end
        ))
		&lt;= #{distance}
			</if>
		</where>
		order by ERRANDS_NUM desc
	</select>

	<select id="myErrandsRequest" parameterType="string" resultMap="errandsMap">
		select * from ERRANDS_RESPONSE_VIEW
		<where>
			<if test="value != null">
				REQUEST_ID = #{value}
			</if>
		</where>
		order by ARRIVAL_TIME desc, FINISH_TIME desc, ERRANDS_NUM desc
	</select>

	<select id="countRequest" resultType="int" parameterType="string">
		select count(*) from ERRANDS_RESPONSE_VIEW
		<where>
			<if test="value != null">
				REQUEST_ID = #{value}
			</if>
		</where>
	</select>
	<select id="myErrandsResponse" parameterType="string" resultMap="errandsMap">
		select * from ERRANDS_REPLY_GPA_VIEW
		<where>
			<if test="value != null">
				MEMBER_ID = #{value}
			</if>
		</where>
		order by ARRIVAL_TIME desc, FINISH_TIME desc, ERRANDS_NUM desc
	</select>

	<select id="countResponse" resultType="int" parameterType="string">
		select count(*) from ERRANDS_REPLY_GPA_VIEW
		<where>
			<if test="value != null">
				MEMBER_ID = #{value}
			</if>
		</where>
	</select>
	<update id="updateErrands" parameterType="map">
		update ERRANDS
		<set>
			<if test="responseId != null">
				RESPONSE_ID = #{responseId},
			</if>
			<if test="arrivalTime != null">
				ARRIVAL_TIME = to_char(sysdate, 'YYYY-MM-DD HH:MI:SS'),
			</if>
			<if test="finishTime != null">
				FINISH_TIME = to_char(sysdate, 'YYYY-MM-DD HH:MI:SS'),
			</if>
			<if test="startTime != null">
				START_TIME = to_char(sysdate, 'YYYY-MM-DD HH:MI:SS')
			</if>
		</set>
		where ERRANDS_NUM = #{num}
	</update>

	<!-- 돈되는 심부름 -->
	<select id="moneyErrands" resultMap="errandsMap">
		select * from
		ERRANDS_REPLY_GPA_VIEW
		where RESPONSE_ID is null
		ORDER BY ERRANDS_PRICE
		desc
	</select>

	<!--리스트로 보기 -->
	<select id="selectList" resultMap="errandsMap" parameterType="map">
		select * from ERRANDS_VIEW
		<where>
			<if test="addr != null">
				addr like #{addr}
			</if>
			and response_id is null
		</where>
		<if test="sort == 3">
			ORDER BY ERRANDS_PRICE ASC
		</if>
		<if test="sort == 2">
			ORDER BY ERRANDS_PRICE DESC
		</if>
		<if test="sort == 1">
			ORDER BY ERRANDS_NUM DESC
		</if>
	</select>
	<!--리스트로 카운팅 -->
	<select id="countList" resultType="int" parameterType="string">
		select count(*) from ERRANDS_VIEW
		<where>
			<if test="value != null">
				addr like #{value}
			</if>
			and response_id is null
		</where>
	</select>
	
	<!-- 채팅목록 가져오기 -->
	<select id="selectChat" resultMap="errandsMap" parameterType="string">
	select * from errands_reply_gpa_view where response_id is not null and (response_id = #{value} or request_id = #{value}) and (arrival_time is null or finish_time is null)
	</select>
</mapper>